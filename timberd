#!/usr/bin/env php
<?php

define('BASEDIR',dirname(__FILE__));

// set an include path
set_include_path(implode(PATH_SEPARATOR, array(
	BASEDIR.'/lib',
	BASEDIR.'/classes',
	)));

// dead simple autoloader
function __autoload($classname)
{
	require_once str_replace('_','/',$classname) . '.php';
}

// show help
if(in_array('-h', $argv) || in_array('--help', $argv))
{
	echo "\nusage: $argv[0] [-v] [-d] [-l 0.0.0.0] [-p 11124] [..options]\n\n";
	echo " -v        : verbose, shows more chatter\n";
	echo " -d        : runs as a daemon, otherwise runs in the foreground\n";
	echo " -l host   : set the address to listen on\n";
	echo " -p port   : sets the port to listen on\n";
	echo " --file f  : writes messages to flat file f\n";
	echo " --db dsn  : writes messages to a database backend\n";
	echo "\n";
	exit(1);
}

$args = array(
	'verbose' => in_array('-v',$argv),
	'daemon' => in_array('-d',$argv),
	'listen' => '0.0.0.0',
	'port' => 11124,
	);

$files = array();
$databases = array();

// parse arguments
foreach($argv as $idx=>$arg)
{
	if($arg == '-l') $args['listen'] = $argv[$idx+1];
	if($arg == '-p') $args['port'] = $argv[$idx+1];
	if($arg == '--file') $files[] = $argv[$idx+1];
	if($arg == '--db') $databases[] = $argv[$idx+1];
}

$clients = array();

// process file clients first
foreach($files as $file)
{
	// create a pair of unix sockets
	$sockets = stream_socket_pair(STREAM_PF_UNIX, STREAM_SOCK_STREAM, STREAM_IPPROTO_IP);
	$clients[] = array(new Timber_FileClient($file, $sockets[0]), $sockets);
}

// initialize the socket server
$server = new Timber_Server($args['listen'], $args['port']);

// fork a child for each client
foreach($clients as $client)
{
	if(pcntl_fork() == 0)
	{
		// close the client side of the socket
		unset($client[1][1]);
		$client[0]->loop();
		exit(0);
	}
	else
	{
		// close the client side of the socket
		unset($client[1][0]);
		$server->addRelaySocket($sockets[1]);
	}
}

// start the server
$server->run();

